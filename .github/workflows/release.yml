name: Release
on:
  push:
    tags:
    - 3.*
    - 4.*
jobs:
  release:
    runs-on: ubuntu-latest
    steps:
    - name: CHECKOUT
      uses: actions/checkout@v4
      with:
        path: rules_erlang
    - name: ASSERT VERSIONS
      id: versions
      working-directory: rules_erlang
      run: |
        sudo npm install --global --silent @bazel/buildozer

        VERSION_BAZEL="$(cat MODULE.bazel | buildozer 'print version' -:%module)"

        if [[ "${{ github.ref_name }}" != "$VERSION_BAZEL" ]]; then
          echo "Version in MODULE.bazel ($VERSION_BAZEL) does not match tag (${{ github.ref_name }})"
          exit 1
        fi

        echo "version=$VERSION_BAZEL" | tee -a $GITHUB_OUTPUT
    - name: FETCH THE SOURCE ARCHIVE
      run: |
        curl \
          -L \
          -o rules_erlang-${{ steps.versions.outputs.version }}.tar.gz \
          https://github.com/${{ github.repository }}/archive/${{ github.ref }}.tar.gz
    - name: CREATE RELEASE
      id: create-release
      uses: ncipollo/release-action@v1.14.0
      with:
        name: rules_erlang ${{ steps.versions.outputs.version }}
        allowUpdates: true
        draft: true
        artifactErrorsFailBuild: true
        updateOnlyUnreleased: true
        generateReleaseNotes: true
        artifacts: >-
          rules_erlang-${{ steps.versions.outputs.version }}.tar.gz
