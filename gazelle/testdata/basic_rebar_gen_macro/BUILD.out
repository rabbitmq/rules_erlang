load("@rules_erlang//:erlang_bytecode2.bzl", "erlc_opts")
load("@rules_erlang//:app_file2.bzl", "app_file")
load("@rules_erlang//:erlang_app_info.bzl", "erlang_app_info")
load(":app.bzl", "all_beam_files", "all_srcs", "all_test_beam_files")

# gazelle:erlang_generate_beam_files_macro

erlc_opts(
    name = "erlc_opts",
    values = select({
        "@rules_erlang//:debug_build": [
            "+debug_info",
            "+recv_opt_info",
            "+warn_export_vars",
            "+warn_shadow_vars",
            "+warn_obsolete_guard",
        ],
        "//conditions:default": [
            "+debug_info",
            "+recv_opt_info",
            "+warn_export_vars",
            "+warn_shadow_vars",
            "+warn_obsolete_guard",
            "+deterministic",
        ],
    }),
    visibility = [":__subpackages__"],
)

erlc_opts(
    name = "test_erlc_opts",
    values = select({
        "@rules_erlang//:debug_build": [
            "+debug_info",
            "-DTEST=1",
        ],
        "//conditions:default": [
            "+debug_info",
            "-DTEST=1",
            "+deterministic",
        ],
    }),
    visibility = [":__subpackages__"],
)

all_beam_files()

all_test_beam_files()

all_srcs()

app_file(
    name = "app_file",
    out = "ebin/seshat.app",
    app_name = "seshat",
    app_src = ["src/seshat.app.src"],
    extra_apps = [
        "crypto",
        "sasl",
    ],
    modules = [":beam_files"],
)

erlang_app_info(
    name = "erlang_app",
    srcs = [":all_srcs"],
    hdrs = [],
    app = ":app_file",
    app_name = "seshat",
    beam = [":beam_files"],
    license_files = [
        "LICENSE",
        "LICENSE-APACHE2",
        "LICENSE-MPL-RabbitMQ",
    ],
    visibility = ["//visibility:public"],
)

erlang_app_info(
    name = "test_erlang_app",
    testonly = True,
    srcs = [":all_srcs"],
    hdrs = [],
    app = ":app_file",
    app_name = "seshat",
    beam = [":test_beam_files"],
    license_files = [
        "LICENSE",
        "LICENSE-APACHE2",
        "LICENSE-MPL-RabbitMQ",
    ],
    visibility = ["//visibility:public"],
)

alias(
    name = "seshat",
    actual = ":erlang_app",
    visibility = ["//visibility:public"],
)
