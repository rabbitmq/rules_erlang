load("@bazel_gazelle//:def.bzl", "gazelle_binary")
load("@io_bazel_rules_go//go:def.bzl", "go_library")

exports_files([
    "dot_app_to_json.sh",
    "rebar_config_to_json.sh",
])

go_library(
    name = "gazelle",
    srcs = [
        "configure.go",
        "dot_app_parser.go",
        "erl_parser.go",
        "erl_parser_impl.go",
        "erlang_app.go",
        "erlang_app_builder.go",
        "fix.go",
        "generate.go",
        "hex_metadata_parser.go",
        "kinds.go",
        "language.go",
        "moduleindex.go",
        "rebar_config_parser.go",
        "resolve.go",
        "update.go",
        "util.go",
    ],
    importpath = "github.com/rabbitmq/rules_erlang/gazelle",
    visibility = ["//visibility:public"],
    deps = [
        "//gazelle/fetch",
        "//gazelle/mutable_set",
        "//gazelle/slices",
        "@bazel_gazelle//config:go_default_library",
        "@bazel_gazelle//label:go_default_library",
        "@bazel_gazelle//language:go_default_library",
        "@bazel_gazelle//merger:go_default_library",
        "@bazel_gazelle//repo:go_default_library",
        "@bazel_gazelle//resolve:go_default_library",
        "@bazel_gazelle//rule:go_default_library",
        "@com_github_bazelbuild_buildtools//build:go_default_library",
        "@com_github_bmatcuk_doublestar_v4//:doublestar",
        "@in_gopkg_yaml_v2//:go_default_library",
        "@io_bazel_rules_go//go/tools/bazel:go_default_library",
    ],
)

sh_binary(
    name = "dot_app_to_json",
    srcs = ["dot_app_to_json.sh"],
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "hex_metadata_config_to_json",
    srcs = ["hex_metadata_config_to_json.sh"],
    visibility = ["//visibility:public"],
)

sh_binary(
    name = "rebar_config_to_json",
    srcs = ["rebar_config_to_json.sh"],
    visibility = ["//visibility:public"],
)

gazelle_binary(
    name = "gazelle_erlang_binary",
    languages = ["//gazelle"],
    visibility = ["//visibility:public"],
)
